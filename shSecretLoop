--// CONFIGURACIÃ“N
_G.tplayer = "Habbathehut" -- ðŸ‘ˆ Tu nick principal
getgenv().loopgoto = true

--// SERVICIOS
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local player = Players.LocalPlayer

--// FunciÃ³n para asignar slot dinÃ¡mico
local function getCircleOffset(index, total)
    local radius = math.clamp(total * 2.5, 6, 12) -- Radio dinÃ¡mico segÃºn cantidad
    local angle = ((index - 1) / total) * (2 * math.pi)
    return Vector3.new(math.cos(angle) * radius, 0, math.sin(angle) * radius)
end

local function getMyOffset()
    -- ordenar todas tus cuentas por UserId
    local clones = {}
    for _, plr in ipairs(Players:GetPlayers()) do
        table.insert(clones, plr)
    end
    table.sort(clones, function(a, b) return a.UserId < b.UserId end)

    -- buscar en quÃ© posiciÃ³n estÃ¡ tu cuenta
    local myIndex = 1
    for i, plr in ipairs(clones) do
        if plr == player then
            myIndex = i
            break
        end
    end

    local total = #clones
    return getCircleOffset(myIndex, total)
end

-- offset que se recalcula por si entran o salen cuentas
local myOffset = getMyOffset()
Players.PlayerAdded:Connect(function() myOffset = getMyOffset() end)
Players.PlayerRemoving:Connect(function() myOffset = getMyOffset() end)

--// No colisiones
local function NoCollideCharacter(char)
	for _, part in pairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CanCollide = false
		end
	end
	char.DescendantAdded:Connect(function(part)
		if part:IsA("BasePart") then
			part.CanCollide = false
		end
	end)
end
player.CharacterAdded:Connect(NoCollideCharacter)
if player.Character then
	NoCollideCharacter(player.Character)
end

--// AUTO FOLLOW LOOP
task.spawn(function()
	while getgenv().loopgoto do
		RunService.Heartbeat:Wait()
		pcall(function()
			local target = Players:FindFirstChild(_G.tplayer)
			if not target then return end

			local targetRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
			local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

			if root and targetRoot then
				local targetPos = targetRoot.CFrame * CFrame.new(myOffset)

				-- movimiento suave
				root.CFrame = root.CFrame:Lerp(targetPos, 0.35)

				-- correcciÃ³n si se queda muy lejos
				if (root.Position - targetRoot.Position).Magnitude > 30 then
					root.CFrame = targetPos
				end

				-- tp de emergencia si caen
				if root.Position.Y < -10 then
					root.CFrame = targetRoot.CFrame * CFrame.new(0, 5, 0)
				end
			end
		end)
	end
end)

--// ANTI AFK
player.Idled:Connect(function()
	VirtualUser:Button2Down(Vector2.new(), workspace.CurrentCamera.CFrame)
	task.wait(1)
	VirtualUser:Button2Up(Vector2.new(), workspace.CurrentCamera.CFrame)
end)

--// ANTI LAG âš¡
task.spawn(function()
	while task.wait(5) do
		pcall(function()
			for _, v in pairs(workspace:GetDescendants()) do
				if v:IsA("ParticleEmitter") or v:IsA("Trail") then
					v:Destroy()
				elseif v:IsA("Decal") or v:IsA("Texture") then
					v:Destroy()
				elseif v:IsA("Sound") then
					v:Stop()
				end
			end
			settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
			workspace.GlobalShadows = false
			game:GetService("Lighting").GlobalShadows = false
		end)
	end
end)
