--// Configuración
_G.tplayer = "Habbathehut" -- Jugador objetivo
getgenv().loopgoto = true

--// Servicios
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")

local player = Players.LocalPlayer

--// Función para que el Character sea atravesable
local function NoCollideCharacter(char)
	for _, part in pairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CanCollide = false
		end
	end
end

-- Llamar al spawnear personaje
player.CharacterAdded:Connect(NoCollideCharacter)
if player.Character then
	NoCollideCharacter(player.Character)
end

--// Auto Loop con "smooth teleport" y offset
task.spawn(function()
	while getgenv().loopgoto do
		RunService.Heartbeat:Wait()
		pcall(function()
			local target = Players[_G.tplayer]
			if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
				local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
				if root then
					-- Posición segura: un poco arriba del target para evitar bug
					local targetPos = target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 3, 0)

					-- Teletransporte suave (interpolación)
					root.CFrame = root.CFrame:Lerp(targetPos, 0.3)
				end
			end
		end)
	end
end)

--// Anti AFK
player.Idled:Connect(function()
	VirtualUser:Button2Down(Vector2.new(), workspace.CurrentCamera.CFrame)
	task.wait(1)
	VirtualUser:Button2Up(Vector2.new(), workspace.CurrentCamera.CFrame)
end)

--// Anti Lag básico
task.spawn(function()
	while task.wait(5) do
		pcall(function()
			for _, v in pairs(workspace:GetDescendants()) do
				if v:IsA("ParticleEmitter") or v:IsA("Trail") then
					v:Destroy()
				end
			end
			settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
			workspace.GlobalShadows = false
			workspace.ExtentsCullingEnabled = true
		end)
	end
end)
